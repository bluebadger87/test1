// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShopProject.DataContext;
using System;

namespace ShopProject.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20190516134220_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopProject.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cityname");

                    b.Property<int>("StateId");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ShopProject.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Countryname");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ShopProject.Models.Order", b =>
                {
                    b.Property<int>("OrderNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OrderDelivery");

                    b.Property<DateTime>("OrderInp");

                    b.Property<int>("OrderTotalPrice");

                    b.Property<int>("OrderUserNo");

                    b.HasKey("OrderNo");

                    b.HasIndex("OrderUserNo");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShopProject.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailNo")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OrderDetailInp");

                    b.Property<int>("OrderDetailOrderNo");

                    b.Property<int>("OrderDetailProductNo");

                    b.Property<int>("OrderDetailQuantity");

                    b.HasKey("OrderDetailNo");

                    b.HasIndex("OrderDetailOrderNo");

                    b.HasIndex("OrderDetailProductNo");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ShopProject.Models.Product", b =>
                {
                    b.Property<int>("ProductNo")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProductCategory");

                    b.Property<string>("ProductDel");

                    b.Property<int>("ProductImage");

                    b.Property<DateTime>("ProductInp");

                    b.Property<string>("ProductMainImage");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int>("ProductPrice");

                    b.Property<string>("ProductRemark");

                    b.Property<int>("ProductStock");

                    b.Property<DateTime>("ProductUpd");

                    b.HasKey("ProductNo");

                    b.HasIndex("ProductCategory");

                    b.HasIndex("ProductImage");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ShopProject.Models.ProductCategoryList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategoryList");
                });

            modelBuilder.Entity("ShopProject.Models.ProductComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentDel");

                    b.Property<DateTime>("CommentInpDate");

                    b.Property<int>("CommentProductNo");

                    b.Property<DateTime>("CommentUpdDate");

                    b.Property<int>("CommentUserNo");

                    b.Property<string>("CommnetContent");

                    b.Property<double>("CommnetScore");

                    b.HasKey("CommentId");

                    b.HasIndex("CommentProductNo");

                    b.HasIndex("CommentUserNo");

                    b.ToTable("ProductComment");
                });

            modelBuilder.Entity("ShopProject.Models.ProductImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DetailNo");

                    b.Property<string>("ProductImageName");

                    b.Property<int>("ProductImageNo");

                    b.HasKey("Id");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ShopProject.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryId");

                    b.Property<string>("Statename");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ShopProject.Models.User", b =>
                {
                    b.Property<int>("UserNo")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserAddress1");

                    b.Property<int>("UserAddress2");

                    b.Property<int>("UserAddress3");

                    b.Property<string>("UserAuthority");

                    b.Property<string>("UserDel");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<DateTime>("UserInp");

                    b.Property<string>("UserMail")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword1")
                        .IsRequired();

                    b.Property<string>("UserPassword2")
                        .IsRequired();

                    b.Property<string>("UserTel")
                        .IsRequired();

                    b.Property<DateTime>("UserUpd");

                    b.HasKey("UserNo");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ShopProject.Models.City", b =>
                {
                    b.HasOne("ShopProject.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopProject.Models.Order", b =>
                {
                    b.HasOne("ShopProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("OrderUserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopProject.Models.OrderDetail", b =>
                {
                    b.HasOne("ShopProject.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderDetailOrderNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopProject.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("OrderDetailProductNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopProject.Models.Product", b =>
                {
                    b.HasOne("ShopProject.Models.ProductCategoryList", "ProductCategoryList")
                        .WithMany()
                        .HasForeignKey("ProductCategory")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopProject.Models.ProductImages", "ProductImages")
                        .WithMany()
                        .HasForeignKey("ProductImage")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopProject.Models.ProductComment", b =>
                {
                    b.HasOne("ShopProject.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("CommentProductNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CommentUserNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopProject.Models.State", b =>
                {
                    b.HasOne("ShopProject.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
